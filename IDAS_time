function [IDAS_Image] = IDAS_PCI_time(RF_Arr,element_Pos_Array_um_X,expose_time,speed_Of_Sound_umps,sampling_Freq,image_Range_X_um,image_Range_Z_um)
%IDAS_PCI_CF:Instant Delay and sum reconstruction for passive cavitation imaging 
%beamformed_Image: double
%RF_Arr:Rf signal (signal length*channel number)
%element_Pos_Array_um_X: receive transducer element position (x)
%expose_time:expouse time for receive
%speed_Of_Sound_umps: speed of sound in us
%sampling_Freq: sampling frequency Fs
%image_Range_X_um: Pixel matrix width (x)
%image_Range_Z_um: Pixel matrix depth (z)
IDAS_Image = zeros(length(image_Range_X_um),ceil(expose_time*1e6),length(image_Range_Z_um));
beamformed_Image = zeros(length(image_Range_X_um), length(image_Range_Z_um));
S = size(RF_Arr);
N=S(1);
for Recon_Start_Time=1:1:expose_time*1e6
    for Xi = 1:length(image_Range_X_um)    
        for Zi=1:length(image_Range_Z_um)
            %%%Calculate sum of intensity at each element for this pixel
            pixel_Amp = 0;
            for ex = 1:length(element_Pos_Array_um_X)
                distance_Along_RF = sqrt((image_Range_X_um(Xi)-element_Pos_Array_um_X(ex))^2+(image_Range_Z_um(Zi))^2);
                time_Pt_Along_RF = distance_Along_RF/(speed_Of_Sound_umps);
                sample_Pt = round((time_Pt_Along_RF+Recon_Start_Time*1e-6)*sampling_Freq);
                if(sample_Pt>N || sample_Pt<1)
                    RF_Amp = 0;
                else
                    RF_Amp = RF_Arr(sample_Pt, ex);
                end

                pixel_Amp = pixel_Amp + RF_Amp;
            end
            beamformed_Image(Xi, Zi) = pixel_Amp;
        end
    end
    beamformed_Image_e=envelope(beamformed_Image);
    IDAS_Image(:,Recon_Start_Time,:)=beamformed_Image_e;
end
end

