clc
close all;
clear;
disp('please chose file location');
file_addr=uigetdir;
disp('please chose preset');
[preset_name,preset_addr]=uigetfile;

if isequal(file_addr,0) || isequal(preset_addr,0)
    disp('pathway not found');
    return;
end

load([preset_addr '\' preset_name]);
fil_sub=load('D:\404\matlab_work\RF_recon_20220818\comb_1');
fil_BW=load('D:\404\matlab_work\RF_recon_20220818\comb_2');

fil_mode=0;
recon_mode=2; %1==TEA,2==IDAS;
maxfilenum=30;
max_reconnum=length(preSet.Recon);
PCI_reconnum=1;

%Trnsducer
no_PData=1;
Trans=preSet.Trans;
numelements=Trans.numelements;
f0=Trans.frequency*1e6; %center frequency,Hz.
element_Pos_Array_um_X=Trans.ElementPosMm(:,1:3)*10^3;  %x,y,z,um

c=1540;     %m/s.
c_um = c*1e6;   %um.
wavelength_um = c_um/f0;

%PData for 2d
PData.Size=[preSet.PData(no_PData).Size(2),preSet.PData(no_PData).Size(1)];%x,z,pixel
PData.Res=[preSet.PData(no_PData).PDelta(1),preSet.PData(no_PData).PDelta(3)].*wavelength_um;%x,z,um
PData.Origin=[preSet.PData(no_PData).Origin(1)/preSet.PData(no_PData).PDelta(1),preSet.PData(no_PData).Origin(3)/preSet.PData(no_PData).PDelta(3)];%x,z,pixels
x_um_Range=(PData.Origin(1)-1+[1:PData.Size(1)]).*PData.Res(1);%um
z_um_Range=(PData.Origin(2)-1+[1:PData.Size(2)]).*PData.Res(2);%um

%source for HIFU
focus_HIFU_um=[5,0,35]*1e3;
source_HIFU_um(1,:)=[54.5,0,-32]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(2,:)=[58.04,0,-25.02]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(3,:)=[60.68,0,-17.65]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(4,:)=[62.4,0,-10]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(5,:)=[62.4,0,10]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(6,:)=[60.68,0,17.65]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(7,:)=[58.04,0,25.02]*1e3+focus_HIFU_um; %x,y,z in Mm
source_HIFU_um(8,:)=[54.5,0,32]*1e3+focus_HIFU_um; %x,y,z in Mm

[startDepth_um,endDepth_um]=calc_distance(source_HIFU_um,element_Pos_Array_um_X,x_um_Range,z_um_Range); 
%[startDepth_um,endDepth_um]=calc_distance([63.2,0,0]*1e3+focus_HIFU_um,element_Pos_Array_um_X,x_um_Range,z_um_Range); 
RF_Start_Time=2*startDepth_um/c_um;
startDepth=startDepth_um/wavelength_um;
endDepth=endDepth_um/wavelength_um; 

PCI=zeros(PData.Size(1),PData.Size(2));
PCI_e=zeros(PData.Size(2),PData.Size(1));
PCI_Ins=zeros(maxfilenum*PCI_reconnum,1);
ACI=zeros(PData.Size(2),PData.Size(1));
ACI_dB=zeros(PData.Size(2),PData.Size(1));
ACI_n=zeros(PData.Size(2),PData.Size(1));
Img=zeros(PData.Size(2),PData.Size(1));


for no_file=11:maxfilenum
    load([file_addr '\RF\RFData_' num2str(no_file)]);
    for no_recon=1:PCI_reconnum
        no_RI=preSet.Recon(no_recon).RINums;
        no_frame=preSet.Recon(no_recon).rcvBufFrame;
        no_receive=preSet.ReconInfo(no_RI).rcvnum;
        fs=preSet.Receive(no_receive).decimSampleRate*1e6;  %sample rate,Hz.
        
        delta=ceil((startDepth)*fs/f0*2)-1; 

        RF_noisy=double(RcvData(preSet.Receive(no_receive).startSample+delta:preSet.Receive(no_receive).endSample,:,no_frame));
        
        if fil_mode==1
            RF_noisy=filter(fil_sub.b,fil_sub.a,RF_noisy);
        elseif fil_mode==2
            RF_noisy=filter(fil_BW.b,fil_BW.a,RF_noisy);
        end
        
        expouse_time = ceil(size(RF_noisy,1)/fs*1e6-max(z_um_Range)/c_um*1e6);
        if recon_mode==1
            PCI_e = (TEA(RF_noisy,element_Pos_Array_um_X, expouse_time*1e-6, c_um, fs, x_um_Range, z_um_Range))';
        elseif recon_mode==2
            [PCI,PCI_IDAS_Ins]=IDAS_PCI(1,RF_noisy,element_Pos_Array_um_X,expouse_time*1e-6,c_um,fs,x_um_Range, z_um_Range);
            PCI_e=envelope(PCI');
        else
            disp('no available recon mode');
        end
        PCI_Ins(no_file)=max(PCI_e(:));
        
        h=figure(1);set(h,'position',[100,250,512,696]);
        imagesc(x_um_Range*1e-3, z_um_Range*1e-3, PCI_e), colormap('hot'),xlabel('lateral/mm'),ylabel('axial/mm')  
        title(['PCI ' num2str(no_file) ' Frame ' num2str(no_frame)]),colorbar('EastOutside');
    end
    for no_recon=2:max_reconnum
        load([file_addr '\IQ\IQData_' num2str(no_file) '_frame_' int2str(no_recon)]);
        no_RI=preSet.Recon(no_recon).RINums;
        no_frame=preSet.Recon(no_recon).rcvBufFrame;
        no_receive=preSet.ReconInfo(no_RI).rcvnum;
        fs=preSet.Receive(no_receive).decimSampleRate*1e6;  %sample rate,Hz.
        ACI=sqrt(IQData{1,1}.^2+IQData{1,2}.^2);
        ACI=ACI./max(ACI(:));
        ACI_dB=real(20*log10(ACI));
        
        h=figure(3);set(h,'position',[612,250,512,696]);
        imagesc(x_um_Range*1e-3, z_um_Range*1e-3,ACI_dB);colormap('gray'),xlabel('lateral/mm'),ylabel('axel/mm')
        title(['ACI ' num2str(no_file) ' Frame ' num2str(no_frame)]),caxis([-60,0]),colorbar('EastOutside');
        
        ACI_n=ACI_dB;
        ACI_n(ACI_n<-60)=-60;
        ACI_n=(ACI_n-(-60))./(0-(-60));
        Img=(ACI_n).*PCI_e;
        
        h=figure(4);set(h,'position',[1124,250,512,696]);
        imagesc(x_um_Range*1e-3, z_um_Range*1e-3,Img);colormap('hot'),xlabel('lateral/mm'),ylabel('axel/mm')
        title(['Img ' num2str(no_file) ' Frame ' num2str(no_frame)]),colorbar('EastOutside');
        pause(0.1);
    end
end
